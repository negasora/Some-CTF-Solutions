# https://www.ibiblio.org/apollo/listings/Luminary099/FLAGWORD_ASSIGNMENTS.agc.html
lookup = {'ACMODFLG': 32, 'ALTSCALE': 186, 'ANTENFLG': 183, 'AORBSFLG': 205, 'AORBTFLG': 200, 'APSESW': 130, 'APSFLAG': 152, 'ASTNFLAG': 108, 'ATTFLAG': 104, 'AUTOMODE': 193, 'AUTR1FLG': 209, 'AUTR2FLG': 208, 'AUXFLAG': 103, 'AVEGFLAG': 115, 'AVEMIDSW': 149, 'AVFLAG': 40, 'CALCMAN2': 43, 'CALCMAN3': 42, 'CDESFLAG': 180, 'CMOONFLG': 123, 'COGAFLAG': 131, 'CSMDKFLG': 197, 'CULTFLAG': 53, 'DBSELFLG': 206, 'DESIGFLG': 185, 'DIDFLAG': 16, 'DIMOFLAG': 59, 'DMENFLG': 81, 'DRIFTDFL': 202, 'DRIFTFLG': 30, 'DSKYFLAG': 75, 'D6OR9FLG': 58, 'ENGONFLG': 83, 'ERADFLAG': 17, 'ETPIFLAG': 38, 'FINALFLG': 39, 'FLAP': 142, 'FLPC': 138, 'FLPI': 139, 'FLRCS': 149, 'FLUNDISP': 125, 'FLVR': 136, 'FREEFLAG': 12, 'FSPASFLG': 5, 'GLOKFAIL': 46, 'GMBDRVSW': 95, 'GUESSW': 28, 'HFLSHFLG': 179, 'IDLEFLAG': 113, 'IGNFLAG': 107, 'IMPULSW': 36, 'IMUSE': 7, 'INFINFLG': 128, 'INITALGN': 133, 'INTFLAG': 151, 'INTYPFLG': 56, 'ITSWICH': 105, 'JSWITCH': 1, 'LETABORT': 141, 'LMOONFLG': 124, 'LOKONSW': 10, 'LOSCMFLG': 33, 'LRALTFLG': 190, 'LRBYPASS': 165, 'LRINH': 172, 'LRPOSFLG': 189, 'LRVELFLG': 187, 'LUNAFLAG': 48, 'MANUFLAG': 106, 'MGLVFLAG': 88, 'MIDAVFLG': 148, 'MIDFLAG': 2, 'MID1FLAG': 147, 'MKOVFLAG': 72, 'MOONFLAG': 3, 'MRKIDFLG': 60, 'MRKNVFLG': 66, 'MRUPTFLG': 70, 'MUNFLAG': 97, 'MWAITFLG': 64, 'NEEDLFLG': 11, 'NEWIFLG': 122, 'NJETSFLG': 15, 'NODOFLAG': 44, 'NOLRREAD': 170, 'NORMSW': 110, 'NORRMON': 86, 'NOR29FLG': 49, 'NOTHROTL': 78, 'NOUPFLAG': 24, 'NRMNVFLG': 67, 'NRMIDFLG': 62, 'NRUPTFLG': 71, 'NTARGFLG': 102, 'NWAITFLG': 65, 'OLDESFLG': 14, 'OPTNSW': 38, 'ORBWFLAG': 54, 'ORDERSW': 129, 'OURRCFLG': 198, 'PDSPFLAG': 63, 'PFRATFLG': 41, 'PINBRFLG': 69, 'PRECIFLG': 52, 'PRIODFLG': 61, 'PRONVFLG': 68, 'PSTHIGAT': 169, 'PULSEFLG': 195, 'P21FLAG': 4, 'P25FLAG': 6, 'QUITFLAG': 145, 'RCDUFAIL': 188, 'RCDU0FLG': 182, 'READLR': 174, 'READRFLG': 51, 'READVEL': 175, 'REDFLAG': 99, 'REFSMFLG': 47, 'REINTFLG': 158, 'REMODFLG': 181, 'RENDWFLG': 89, 'REPOSMON': 184, 'RHCSCFLG': 203, 'RNDVZFLG': 8, 'RNGEDATA': 176, 'RNGSCFLG': 80, 'RODFLAG': 18, 'ROTFLAG': 144, 'RPQFLAG': 120, 'RRDATAFL': 191, 'RRNBSW': 9, 'RRRSFLAG': 192, 'RVSW': 111, 'R04FLAG': 51, 'R10FLAG': 13, 'R61FLAG': 20, 'R77FLAG': 79, 'SCALBAD': 177, 'SLOPESW': 27, 'SNUFFER': 77, 'SOLNSW': 87, 'SRCHOPTN': 31, 'STATEFLG': 55, 'STEERSW': 34, 'SURFFLAG': 127, 'SWANDISP': 109, 'TFFSW': 119, 'TRACKFLG': 25, 'TURNONFL': 194, 'ULLAGFLG': 204, 'UPDATFLG': 23, 'UPLOCKFL': 116, 'USEQRFLG': 196, 'VEHUPFLG': 22, 'VELDATA': 173, 'VERIFLAG': 117, 'VFLAG': 50, 'VFLSHFLG': 178, 'VINTFLAG': 57, 'VXINH': 168, 'V37FLAG': 114, 'V67FLAG': 112, 'V82EMFLG': 118, 'XDELVFLG': 37, 'XDSPFLAG': 74, 'XORFLG': 171, 'XOVINFLG': 201, '3AXISFLG': 84, '360SW': 134, 'S32.1F1': 90, 'S32.1F2': 92, 'S32.1F3A': 92, 'S32.1S3B': 93}

out = ""
with open('step1.txt', 'r') as f:
    for line in f.readlines():
        out += chr(lookup[line.strip()])

print(out)

print()
out = ""
with open('step2.txt', 'r') as f:
    for line in f.readlines():
        out += chr(lookup[line.strip()])

print(out)



# https://www.ibiblio.org/apollo/listings/SundanceXXX/PINBALL_NOUN_TABLES.agc.html
bits = [
0b01101, # 01101 rENDEZVOuS rADAr rANGE rATE
0b01100, # 01100 rENDEZVOuS rADAr rANGE
0b00110, # 00110 WEiGHT2
0b10011, # 10011 lANDiNG rADAr VElX
0b11000, # 11000 COMPuTED AlTiTuDE
0b01001, # 01001 VElOCiTY2
0b01001, # 01001 VElOCiTY2
0b11001, # 11001 DP DEGrEES
0b01100, # 01100 rENDEZVOuS rADAr rANGE
0b10001, # 10001 FOrWArD/lATErAl VElOCiTY
0b11000, # 11000 COMPuTED AlTiTuDE
0b01010, # 01010 VElOCiTY3
0b10010, # 10010 rOTATiONAl HAND CONTrOllEr ANGlE rATES
]





# ITA2 -> https://en.wikipedia.org/wiki/Baudot_code
lookup = [
[(0b10111, 0b11101), 'Q'],
[(0b10011, 0b11001), 'W'],
[(0b00001, 0b10000), 'E'],
[(0b01010, 0b01010), 'R'],
[(0b10000, 0b00001), 'T'],
[(0b10101, 0b10101), 'Y'],
[(0b00111, 0b11100), 'U'],
[(0b00110, 0b01100), 'I'],
[(0b11000, 0b00011), 'O'],
[(0b10110, 0b01101), 'P'],
[(0b00011, 0b11000), 'A'],
[(0b00101, 0b10100), 'S'],
[(0b01001, 0b10010), 'D'],
[(0b01101, 0b10110), 'F'],
[(0b11010, 0b01011), 'G'],
[(0b10100, 0b00101), 'H'],
[(0b01011, 0b11010), 'J'],
[(0b01111, 0b11110), 'K'],
[(0b10010, 0b01001), 'L'],
[(0b10001, 0b10001), 'Z'],
[(0b11101, 0b10111), 'X'],
[(0b01110, 0b01110), 'C'],
[(0b11110, 0b01111), 'V'],
[(0b11001, 0b10011), 'B'],
[(0b01100, 0b00110), 'N'],
[(0b11100, 0b00111), 'M'],
]


out = ''
for i in bits:
    for j in lookup:
        if j[0][1] == i:
            out += j[1]
            break

print(out)


# RS{PINBALLWIZARD}
